version: '3.9'

services:
  api:
    depends_on:
      - db
    build: .
    ports:
      - '8000:8000'
    env_file:
      - ./.env
  db:
    image: postgres
    container_name: postgres_db
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: 'password123'
      POSTGRES_USER: 'root'
      POSTGRES_DB: 'dj_api'
    volumes:
      - ./data:/var/lib/postgresql/data
  django:
    build: .
    container_name: django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/usr/src/app/
    ports:
      - '8000:8000'
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
  celery:
    build: .
    command: celery -A ecommerce_api worker -l INFO
    volumes:
      - .:/usr/src/app
    environment:
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - django
      - redis
    #nginx server docker image
  nginx:
    restart: on-failure
    container_name: nginx
    image: nginx:stable-alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static:/static
      - media:/media
    ports:
      - 80:80
    depends_on:
      - django
  redis:
    image: 'redis:alpine'

volumes:
  pgdata:
